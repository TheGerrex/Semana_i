{"moduleFile":{"sourceFilePath":"/Users/gerardogarcia/code/TheGerrex/Semana_i_linked_data/src/components/data-cloud/data-cloud.tsx","jsFilePath":"/Users/gerardogarcia/code/TheGerrex/Semana_i_linked_data/src/components/data-cloud/data-cloud.js","cmps":[{"isLegacy":false,"tagName":"data-cloud","excludeFromCollection":false,"isCollectionDependency":false,"componentClassName":"MyComponent","elementRef":"el","encapsulation":"none","properties":[{"name":"data","type":"unknown","reflect":false,"mutable":false,"required":false,"optional":false,"defaultValue":"[]","complexType":{"original":"any[]","resolved":"any[]","references":{}},"docs":{"tags":[],"text":""},"internal":false}],"virtualProperties":[],"states":[{"name":"isLoading"}],"methods":[],"listeners":[],"events":[],"watchers":[],"styles":[{"modeName":"$","styleId":"DATA-CLOUD","styleStr":null,"styleIdentifier":null,"compiledStyleText":null,"compiledStyleTextScoped":null,"compiledStyleTextScopedCommented":null,"externalStyles":[{"absolutePath":"/Users/gerardogarcia/code/TheGerrex/Semana_i_linked_data/src/components/data-cloud/data-cloud.css","relativePath":"data-cloud.css","originalComponentPath":"data-cloud.css"}]}],"legacyConnect":[],"legacyContext":[],"internal":false,"assetsDirs":[],"styleDocs":[],"docs":{"tags":[],"text":""},"jsFilePath":"/Users/gerardogarcia/code/TheGerrex/Semana_i_linked_data/src/components/data-cloud/data-cloud.js","sourceFilePath":"/Users/gerardogarcia/code/TheGerrex/Semana_i_linked_data/src/components/data-cloud/data-cloud.tsx","hasAttributeChangedCallbackFn":false,"hasComponentWillLoadFn":false,"hasComponentDidLoadFn":false,"hasComponentShouldUpdateFn":false,"hasComponentWillUpdateFn":false,"hasComponentDidUpdateFn":false,"hasComponentWillRenderFn":false,"hasComponentDidRenderFn":false,"hasComponentDidUnloadFn":false,"hasConnectedCallbackFn":false,"hasDisconnectedCallbackFn":false,"hasElement":false,"hasEvent":false,"hasLifecycle":false,"hasListener":false,"hasListenerTarget":false,"hasListenerTargetWindow":false,"hasListenerTargetDocument":false,"hasListenerTargetBody":false,"hasListenerTargetParent":false,"hasMember":true,"hasMethod":false,"hasMode":false,"hasAttribute":false,"hasProp":true,"hasPropNumber":false,"hasPropBoolean":false,"hasPropString":false,"hasPropMutable":false,"hasReflect":false,"hasRenderFn":true,"hasState":true,"hasStyle":true,"hasVdomAttribute":true,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":true,"hasVdomStyle":false,"hasVdomText":false,"hasWatchCallback":false,"isPlain":false,"htmlAttrNames":["id","onload"],"htmlTagNames":["script","li","ul","div"],"isUpdateable":true,"potentialCmpRefs":[]}],"coreRuntimeApis":[],"collectionName":null,"dtsFilePath":null,"excludeFromCollection":false,"externalImports":["@stencil/core"],"hasVdomAttribute":false,"hasVdomXlink":false,"hasVdomClass":false,"hasVdomFunctional":false,"hasVdomKey":false,"hasVdomListener":false,"hasVdomRef":false,"hasVdomRender":false,"hasVdomStyle":false,"hasVdomText":false,"htmlAttrNames":[],"htmlTagNames":[],"isCollectionDependency":false,"isLegacy":false,"localImports":[],"originalCollectionComponentPath":null,"originalImports":["@stencil/core"],"potentialCmpRefs":[]},"jsText":"import { h } from \"@stencil/core\";\r\n// import Fragment from 'stencil-fragment';\r\nexport class MyComponent {\r\n    constructor() {\r\n        this.isLoading = true;\r\n        this.data = [];\r\n    }\r\n    loadCarbon() {\r\n        const tagCanvasScript = document.createElement(\"script\");\r\n        tagCanvasScript.onload = () => { this.isLoading = false; };\r\n        tagCanvasScript.src = \"carbonldp.js\";\r\n        this.el.appendChild(tagCanvasScript);\r\n        console.log(\"CarbonLDP\");\r\n    }\r\n    makeList() {\r\n        const lis = document.createElement(\"li\");\r\n        const ul = document.createElement(\"ul\");\r\n        map(data.bindings);\r\n        {\r\n            lis.innerHTML = `<a href=\"#\" data-weight=` + data.bindings[\"movieCount\"] + `>` + data.bindings[\"keywordLabel\"] + `</a>`;\r\n            ul.appendChild(lis);\r\n        }\r\n    }\r\n    render() {\r\n        return (h(\"div\", { id: \"tags\", onload: \"makeList()\" }));\r\n    }\r\n    static get is() { return \"data-cloud\"; }\r\n    static get originalStyleUrls() { return {\r\n        \"$\": [\"data-cloud.css\"]\r\n    }; }\r\n    static get styleUrls() { return {\r\n        \"$\": [\"data-cloud.css\"]\r\n    }; }\r\n    static get properties() { return {\r\n        \"data\": {\r\n            \"type\": \"unknown\",\r\n            \"mutable\": false,\r\n            \"complexType\": {\r\n                \"original\": \"any[]\",\r\n                \"resolved\": \"any[]\",\r\n                \"references\": {}\r\n            },\r\n            \"required\": false,\r\n            \"optional\": false,\r\n            \"docs\": {\r\n                \"tags\": [],\r\n                \"text\": \"\"\r\n            },\r\n            \"defaultValue\": \"[]\"\r\n        }\r\n    }; }\r\n    static get states() { return {\r\n        \"isLoading\": {}\r\n    }; }\r\n    static get elementRef() { return \"el\"; }\r\n}\r\n"}